def cv_load(classinstance, daily, daily_reg):
    cv = dict(
        map_covid_reg = classinstance.overall_regions_data_as_json(),
        map_covid_dep = classinstance.overall_departments_data_as_json(),
        map_positive_reg = classinstance.overall_regions_positive_data_as_json(),
        map_positive_dep = classinstance.overall_departments_positive_data_as_json(),
        charts_impacted_dep = classinstance.charts_impacted_dep(),
        charts_and_parameters_positive_data = classinstance.charts_positive_data(),
        charts_and_parameters_covid_data = classinstance.charts(),
        charts_pca_global = classinstance.pca_charts(data=daily, pcdim=classinstance.default_pcdim, normalize=classinstance.default_normalize, start_d_learn=classinstance.default_start_d_learn_fr, end_d_learn=classinstance.default_end_d_learn_fr, alpha=classinstance.default_alpha),
        charts_pca_hosp_reg = classinstance.pca_charts(data=daily_reg, pcdim=classinstance.default_pcdim_reg, normalize=classinstance.default_normalize_reg, start_d_learn=classinstance.default_start_d_learn_fr_reg, end_d_learn=classinstance.default_end_d_learn_fr_reg, alpha=classinstance.default_alpha_reg),
        label = classinstance.request_label(),
        department = classinstance.default_department,
        region = classinstance.default_region,
        first_day_fr = classinstance.first_day_fr,
        last_day_fr = classinstance.last_day_fr,
        map_choice = classinstance.map_choice,
        criterion_choice = classinstance.criterion_choice,
        number_all_dep = classinstance.number_all_dep,
        global_pc = classinstance.global_pc,
        normalize_states = classinstance.normalize_states,
        alpha_smooth = classinstance.alpha_smooth,
        pc_reg = classinstance.pc_reg,
        map_select = classinstance.default_map_select,
        top_dep = classinstance.default_top_dep,
        criterion_select = classinstance.default_criterion_select,
        pcdim = classinstance.default_pcdim,
        normalize = classinstance.default_normalize,
        start_d_learn_fr = classinstance.default_start_d_learn_fr,
        end_d_learn_fr = classinstance.default_end_d_learn_fr,
        alpha = classinstance.default_alpha,
        pcdim_reg = classinstance.default_pcdim_reg,
        normalize_reg = classinstance.default_normalize_reg,
        start_d_learn_fr_reg = classinstance.default_start_d_learn_fr_reg,
        end_d_learn_fr_reg = classinstance.default_end_d_learn_fr_reg,
        alpha_reg = classinstance.default_alpha_reg,
        covid_state = classinstance.default_covid_state,
        positive_state = classinstance.default_positive_state,
    )
    return cv